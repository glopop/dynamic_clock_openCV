import cv2
import numpy as np
import time
import math

diameter = 400
center = (diameter // 2, diameter // 2)
radius = diameter // 2 - 10

# draw clock hands
def draw_hand(img, angle, length, thickness, color):
    end_x = int(center[0] + length * math.cos(angle))
    end_y = int(center[1] + length * math.sin(angle))
    cv2.line(img, center, (end_x, end_y), color, thickness, cv2.LINE_AA)

#  draw clock face
def draw_clock_face():
    img = np.zeros((diameter, diameter, 3), dtype=np.uint8)
    img[:] = (30, 30, 30)  # Background color
    
    # circular border
    cv2.circle(img, center, radius, (200, 200, 200), 4, cv2.LINE_AA)
    
    # hour markers
    for i in range(12):
        angle = math.radians(i * 30)
        inner_x = int(center[0] + (radius - 20) * math.cos(angle))
        inner_y = int(center[1] + (radius - 20) * math.sin(angle))
        outer_x = int(center[0] + radius * math.cos(angle))
        outer_y = int(center[1] + radius * math.sin(angle))
        cv2.line(img, (inner_x, inner_y), (outer_x, outer_y), (255, 255, 255), 3, cv2.LINE_AA)
    
    return img

# loop to update the clock in real time
while True:
    img = draw_clock_face()
    
    # current time
    t = time.localtime()
    hours, minutes, seconds = t.tm_hour % 12, t.tm_min, t.tm_sec
    
    # angles for hands
    sec_angle = math.radians(270 + seconds * 6)
    min_angle = math.radians(270 + minutes * 6 + seconds * 0.1)
    hour_angle = math.radians(270 + hours * 30 + minutes * 0.5)
    
    # hands
    draw_hand(img, hour_angle, radius * 0.5, 6, (0, 255, 0))  # hour hand (green)
    draw_hand(img, min_angle, radius * 0.7, 4, (255, 255, 0))  # min hand (yellow)
    draw_hand(img, sec_angle, radius * 0.9, 2, (0, 0, 255))  # second hand (red)
    
    # center circle
    cv2.circle(img, center, 5, (255, 255, 255), -1, cv2.LINE_AA)
    
    # clock
    cv2.imshow("clock dynamic", img)
    
    # exit on click 'q'
    if cv2.waitKey(1000 // 30) & 0xFF == ord('q'):
        break

cv2.destroyAllWindows()
